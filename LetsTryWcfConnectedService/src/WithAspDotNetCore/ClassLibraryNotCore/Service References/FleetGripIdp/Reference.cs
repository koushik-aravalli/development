//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibraryNotCore.FleetGripIdp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoidResponse", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SimpleResponseListOfMessageQueueDTOklkoR5_SD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SimpleResponseOfMessageQueueDTOklkoR5_SD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ResponseListOfGenericDataTerminalDTOklkoR5_SD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ResponseOfGenericDataTerminalDTOklkoR5_SD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse))]
    public partial class VoidResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElapsedMillisecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFunctionalErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUsingNeo4JField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElapsedMilliseconds {
            get {
                return this.ElapsedMillisecondsField;
            }
            set {
                if ((this.ElapsedMillisecondsField.Equals(value) != true)) {
                    this.ElapsedMillisecondsField = value;
                    this.RaisePropertyChanged("ElapsedMilliseconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorNumber {
            get {
                return this.ErrorNumberField;
            }
            set {
                if ((this.ErrorNumberField.Equals(value) != true)) {
                    this.ErrorNumberField = value;
                    this.RaisePropertyChanged("ErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFunctionalError {
            get {
                return this.IsFunctionalErrorField;
            }
            set {
                if ((this.IsFunctionalErrorField.Equals(value) != true)) {
                    this.IsFunctionalErrorField = value;
                    this.RaisePropertyChanged("IsFunctionalError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsingNeo4J {
            get {
                return this.IsUsingNeo4JField;
            }
            set {
                if ((this.IsUsingNeo4JField.Equals(value) != true)) {
                    this.IsUsingNeo4JField = value;
                    this.RaisePropertyChanged("IsUsingNeo4J");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleResponseListOfMessageQueueDTOklkoR5_SD", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList))]
    public partial class SimpleResponseListOfMessageQueueDTOklkoR5_SD : ClassLibraryNotCore.FleetGripIdp.VoidResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO[] DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountTotal {
            get {
                return this.CountTotalField;
            }
            set {
                if ((this.CountTotalField.Equals(value) != true)) {
                    this.CountTotalField = value;
                    this.RaisePropertyChanged("CountTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueResponseList", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class MessageQueueResponseList : ClassLibraryNotCore.FleetGripIdp.SimpleResponseListOfMessageQueueDTOklkoR5_SD {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleResponseOfMessageQueueDTOklkoR5_SD", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse))]
    public partial class SimpleResponseOfMessageQueueDTOklkoR5_SD : ClassLibraryNotCore.FleetGripIdp.VoidResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO DetailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueResponse", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class MessageQueueResponse : ClassLibraryNotCore.FleetGripIdp.SimpleResponseOfMessageQueueDTOklkoR5_SD {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseListOfGenericDataTerminalDTOklkoR5_SD", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList))]
    public partial class ResponseListOfGenericDataTerminalDTOklkoR5_SD : ClassLibraryNotCore.FleetGripIdp.VoidResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO[] DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountTotal {
            get {
                return this.CountTotalField;
            }
            set {
                if ((this.CountTotalField.Equals(value) != true)) {
                    this.CountTotalField = value;
                    this.RaisePropertyChanged("CountTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericDataTerminalResponseList", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericDataTerminalResponseList : ClassLibraryNotCore.FleetGripIdp.ResponseListOfGenericDataTerminalDTOklkoR5_SD {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfGenericDataTerminalDTOklkoR5_SD", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse))]
    public partial class ResponseOfGenericDataTerminalDTOklkoR5_SD : ClassLibraryNotCore.FleetGripIdp.VoidResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO DetailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericDataTerminalResponse", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericDataTerminalResponse : ClassLibraryNotCore.FleetGripIdp.ResponseOfGenericDataTerminalDTOklkoR5_SD {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class MessageQueueDTO : ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleObjectDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ExternalSystemDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ExternalTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.TechnologyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusReasonDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusRemoveableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.LanguageDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ServiceTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.RoutingTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.PackageDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AllowanceDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CurrencyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.UnitDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.UnitTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.TelemedDeviceStatusDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallStatusDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallTypeWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.LocationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.DUNSStatusDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VatTariffDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselTypeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SkyFileAccountLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VizadaBoxLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectLightWeightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO))]
    public partial class SimpleObjectDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LockIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LockId {
            get {
                return this.LockIdField;
            }
            set {
                if ((this.LockIdField.Equals(value) != true)) {
                    this.LockIdField = value;
                    this.RaisePropertyChanged("LockId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalSystemDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ExternalSystemDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ExternalTypeDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeviceStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ComDeviceStatusDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeviceClassDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ComDeviceClassDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO DefaultComdeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionExtraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ProductDTO ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiredSubsPrepaidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO DefaultComdeviceStatus {
            get {
                return this.DefaultComdeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultComdeviceStatusField, value) != true)) {
                    this.DefaultComdeviceStatusField = value;
                    this.RaisePropertyChanged("DefaultComdeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionExtra {
            get {
                return this.DescriptionExtraField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionExtraField, value) != true)) {
                    this.DescriptionExtraField = value;
                    this.RaisePropertyChanged("DescriptionExtra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiredSubsPrepaid {
            get {
                return this.RequiredSubsPrepaidField;
            }
            set {
                if ((this.RequiredSubsPrepaidField.Equals(value) != true)) {
                    this.RequiredSubsPrepaidField = value;
                    this.RaisePropertyChanged("RequiredSubsPrepaid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductHintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.TechnologyDTO TechnologyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductHint {
            get {
                return this.ProductHintField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductHintField, value) != true)) {
                    this.ProductHintField = value;
                    this.RaisePropertyChanged("ProductHint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.TechnologyDTO Technology {
            get {
                return this.TechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyField, value) != true)) {
                    this.TechnologyField = value;
                    this.RaisePropertyChanged("Technology");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TechnologyDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class TechnologyDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeviceStatusReasonDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ComDeviceStatusReasonDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusRemoveableDTO ComDeviceStatusRemoveableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusRemoveableDTO ComDeviceStatusRemoveable {
            get {
                return this.ComDeviceStatusRemoveableField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusRemoveableField, value) != true)) {
                    this.ComDeviceStatusRemoveableField = value;
                    this.RaisePropertyChanged("ComDeviceStatusRemoveable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComDeviceStatusRemoveableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ComDeviceStatusRemoveableDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExplainationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Explaination {
            get {
                return this.ExplainationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExplainationField, value) != true)) {
                    this.ExplainationField = value;
                    this.RaisePropertyChanged("Explaination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class LanguageDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultLanguage {
            get {
                return this.DefaultLanguageField;
            }
            set {
                if ((this.DefaultLanguageField.Equals(value) != true)) {
                    this.DefaultLanguageField = value;
                    this.RaisePropertyChanged("DefaultLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ServiceTypeDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRateServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrafficServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedsSettingRateRelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.RoutingTypeDTO RoutingTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRateService {
            get {
                return this.IsRateServiceField;
            }
            set {
                if ((this.IsRateServiceField.Equals(value) != true)) {
                    this.IsRateServiceField = value;
                    this.RaisePropertyChanged("IsRateService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrafficService {
            get {
                return this.IsTrafficServiceField;
            }
            set {
                if ((this.IsTrafficServiceField.Equals(value) != true)) {
                    this.IsTrafficServiceField = value;
                    this.RaisePropertyChanged("IsTrafficService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsSettingRateRelation {
            get {
                return this.NeedsSettingRateRelationField;
            }
            set {
                if ((this.NeedsSettingRateRelationField.Equals(value) != true)) {
                    this.NeedsSettingRateRelationField = value;
                    this.RaisePropertyChanged("NeedsSettingRateRelation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.RoutingTypeDTO RoutingType {
            get {
                return this.RoutingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutingTypeField, value) != true)) {
                    this.RoutingTypeField = value;
                    this.RaisePropertyChanged("RoutingType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutingTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class RoutingTypeDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class PackageDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.AllowanceDTO[] AllowancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ProductDTO ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.AllowanceDTO[] Allowances {
            get {
                return this.AllowancesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllowancesField, value) != true)) {
                    this.AllowancesField = value;
                    this.RaisePropertyChanged("Allowances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionType {
            get {
                return this.SubscriptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionTypeField, value) != true)) {
                    this.SubscriptionTypeField = value;
                    this.RaisePropertyChanged("SubscriptionType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllowanceDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class AllowanceDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.CurrencyDTO CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.UnitDTO PerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.UnitDTO UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.CurrencyDTO Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((this.DefaultValueField.Equals(value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.UnitDTO PerUnit {
            get {
                return this.PerUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PerUnitField, value) != true)) {
                    this.PerUnitField = value;
                    this.RaisePropertyChanged("PerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.UnitDTO Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class CurrencyDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencySignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencySign {
            get {
                return this.CurrencySignField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencySignField, value) != true)) {
                    this.CurrencySignField = value;
                    this.RaisePropertyChanged("CurrencySign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class UnitDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.UnitTypeDTO UnitTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.UnitTypeDTO UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitTypeField, value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class UnitTypeDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreferredDisplayUnitIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreferredDisplayUnitId {
            get {
                return this.PreferredDisplayUnitIdField;
            }
            set {
                if ((this.PreferredDisplayUnitIdField.Equals(value) != true)) {
                    this.PreferredDisplayUnitIdField = value;
                    this.RaisePropertyChanged("PreferredDisplayUnitId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TelemedDeviceStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class TelemedDeviceStatusDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteLightweightDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectLightWeightDTO))]
    public partial class SiteLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO[] ExternalReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteType SiteTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO[] ExternalReferences {
            get {
                return this.ExternalReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalReferencesField, value) != true)) {
                    this.ExternalReferencesField = value;
                    this.RaisePropertyChanged("ExternalReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteType SiteType {
            get {
                return this.SiteTypeField;
            }
            set {
                if ((this.SiteTypeField.Equals(value) != true)) {
                    this.SiteTypeField = value;
                    this.RaisePropertyChanged("SiteType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallationLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallationStateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallStatusDTO InstallationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO InstallationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InterfaceReferenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModemIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallationID {
            get {
                return this.InstallationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationIDField, value) != true)) {
                    this.InstallationIDField = value;
                    this.RaisePropertyChanged("InstallationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallationStateDate {
            get {
                return this.InstallationStateDateField;
            }
            set {
                if ((this.InstallationStateDateField.Equals(value) != true)) {
                    this.InstallationStateDateField = value;
                    this.RaisePropertyChanged("InstallationStateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallStatusDTO InstallationStatus {
            get {
                return this.InstallationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationStatusField, value) != true)) {
                    this.InstallationStatusField = value;
                    this.RaisePropertyChanged("InstallationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO InstallationType {
            get {
                return this.InstallationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationTypeField, value) != true)) {
                    this.InstallationTypeField = value;
                    this.RaisePropertyChanged("InstallationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroup {
            get {
                return this.InstallationTypeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationTypeGroupField, value) != true)) {
                    this.InstallationTypeGroupField = value;
                    this.RaisePropertyChanged("InstallationTypeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InterfaceReferenceID {
            get {
                return this.InterfaceReferenceIDField;
            }
            set {
                if ((this.InterfaceReferenceIDField.Equals(value) != true)) {
                    this.InterfaceReferenceIDField = value;
                    this.RaisePropertyChanged("InterfaceReferenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModemID {
            get {
                return this.ModemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModemIDField, value) != true)) {
                    this.ModemIDField = value;
                    this.RaisePropertyChanged("ModemID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallStatusDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedForNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedForTerminationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowedForNew {
            get {
                return this.IsAllowedForNewField;
            }
            set {
                if ((this.IsAllowedForNewField.Equals(value) != true)) {
                    this.IsAllowedForNewField = value;
                    this.RaisePropertyChanged("IsAllowedForNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowedForTermination {
            get {
                return this.IsAllowedForTerminationField;
            }
            set {
                if ((this.IsAllowedForTerminationField.Equals(value) != true)) {
                    this.IsAllowedForTerminationField = value;
                    this.RaisePropertyChanged("IsAllowedForTermination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallTypeWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO))]
    public partial class InstallTypeWritableDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllowedForNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroup {
            get {
                return this.InstallationTypeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationTypeGroupField, value) != true)) {
                    this.InstallationTypeGroupField = value;
                    this.RaisePropertyChanged("InstallationTypeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllowedForNew {
            get {
                return this.IsAllowedForNewField;
            }
            set {
                if ((this.IsAllowedForNewField.Equals(value) != true)) {
                    this.IsAllowedForNewField = value;
                    this.RaisePropertyChanged("IsAllowedForNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationTypeGroupWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO))]
    public partial class InstallationTypeGroupWritableDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationTypeGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallationTypeGroupDTO : ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallTypeDTO : ClassLibraryNotCore.FleetGripIdp.InstallTypeWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class LocationDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteGroupLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class SiteGroupLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DUNSStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class DUNSStatusDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VatTariffDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class VatTariffDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VatPercentageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceText {
            get {
                return this.InvoiceTextField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTextField, value) != true)) {
                    this.InvoiceTextField = value;
                    this.RaisePropertyChanged("InvoiceText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VatPercentage {
            get {
                return this.VatPercentageField;
            }
            set {
                if ((this.VatPercentageField.Equals(value) != true)) {
                    this.VatPercentageField = value;
                    this.RaisePropertyChanged("VatPercentage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VesselTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class VesselTypeDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Level5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Level5DecodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level5 {
            get {
                return this.Level5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Level5Field, value) != true)) {
                    this.Level5Field = value;
                    this.RaisePropertyChanged("Level5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level5Decode {
            get {
                return this.Level5DecodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Level5DecodeField, value) != true)) {
                    this.Level5DecodeField = value;
                    this.RaisePropertyChanged("Level5Decode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkyFileAccountLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class SkyFileAccountLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VizadaBoxLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class VizadaBoxLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HardwareIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XchangeBoxSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XchangeBoxSoftwareVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HardwareID {
            get {
                return this.HardwareIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareIDField, value) != true)) {
                    this.HardwareIDField = value;
                    this.RaisePropertyChanged("HardwareID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XchangeBoxSerialNumber {
            get {
                return this.XchangeBoxSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.XchangeBoxSerialNumberField, value) != true)) {
                    this.XchangeBoxSerialNumberField = value;
                    this.RaisePropertyChanged("XchangeBoxSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XchangeBoxSoftwareVersion {
            get {
                return this.XchangeBoxSoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.XchangeBoxSoftwareVersionField, value) != true)) {
                    this.XchangeBoxSoftwareVersionField = value;
                    this.RaisePropertyChanged("XchangeBoxSoftwareVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VesselLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class VesselLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LrImoShipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MMSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VesselTypeDTO VesselTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallSign {
            get {
                return this.CallSignField;
            }
            set {
                if ((object.ReferenceEquals(this.CallSignField, value) != true)) {
                    this.CallSignField = value;
                    this.RaisePropertyChanged("CallSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LrImoShipNo {
            get {
                return this.LrImoShipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LrImoShipNoField, value) != true)) {
                    this.LrImoShipNoField = value;
                    this.RaisePropertyChanged("LrImoShipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MMSI {
            get {
                return this.MMSIField;
            }
            set {
                if ((object.ReferenceEquals(this.MMSIField, value) != true)) {
                    this.MMSIField = value;
                    this.RaisePropertyChanged("MMSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VesselTypeDTO VesselType {
            get {
                return this.VesselTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselTypeField, value) != true)) {
                    this.VesselTypeField = value;
                    this.RaisePropertyChanged("VesselType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AircraftLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class AircraftLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AESIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AircraftClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AntennaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryOfRegistryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICAOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TailNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AESID {
            get {
                return this.AESIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AESIDField, value) != true)) {
                    this.AESIDField = value;
                    this.RaisePropertyChanged("AESID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AircraftClass {
            get {
                return this.AircraftClassField;
            }
            set {
                if ((object.ReferenceEquals(this.AircraftClassField, value) != true)) {
                    this.AircraftClassField = value;
                    this.RaisePropertyChanged("AircraftClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Antenna {
            get {
                return this.AntennaField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaField, value) != true)) {
                    this.AntennaField = value;
                    this.RaisePropertyChanged("Antenna");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryOfRegistryId {
            get {
                return this.CountryOfRegistryIdField;
            }
            set {
                if ((this.CountryOfRegistryIdField.Equals(value) != true)) {
                    this.CountryOfRegistryIdField = value;
                    this.RaisePropertyChanged("CountryOfRegistryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICAO {
            get {
                return this.ICAOField;
            }
            set {
                if ((object.ReferenceEquals(this.ICAOField, value) != true)) {
                    this.ICAOField = value;
                    this.RaisePropertyChanged("ICAO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TailNumber {
            get {
                return this.TailNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TailNumberField, value) != true)) {
                    this.TailNumberField = value;
                    this.RaisePropertyChanged("TailNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaticSiteLightweightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class StaticSiteLightweightDTO : ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LocationDTO CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LocationDTO Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Global {
            get {
                return this.GlobalField;
            }
            set {
                if ((this.GlobalField.Equals(value) != true)) {
                    this.GlobalField = value;
                    this.RaisePropertyChanged("Global");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteTrackingObjectLightWeightDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class SiteTrackingObjectLightWeightDTO : ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceUniqueIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceUniqueID {
            get {
                return this.DeviceUniqueIDField;
            }
            set {
                if ((this.DeviceUniqueIDField.Equals(value) != true)) {
                    this.DeviceUniqueIDField = value;
                    this.RaisePropertyChanged("DeviceUniqueID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO))]
    public partial class MessageQueueWritableDTO : ClassLibraryNotCore.FleetGripIdp.SimpleObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Configuration {
            get {
                return this.ConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationField, value) != true)) {
                    this.ConfigurationField = value;
                    this.RaisePropertyChanged("Configuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueueID {
            get {
                return this.QueueIDField;
            }
            set {
                if ((this.QueueIDField.Equals(value) != true)) {
                    this.QueueIDField = value;
                    this.RaisePropertyChanged("QueueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalReferenceDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ExternalReferenceDTO : ClassLibraryNotCore.FleetGripIdp.ExternalReferenceWritableDTO {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteType", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    public enum SiteType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vessel = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StaticSite = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aircraft = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteTrackingObject = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericModemWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericModemDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSimcardWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MsisdnWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MsisdnDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSimcardDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SimcardWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SimcardDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ContactWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ContactDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CompanyWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CompanyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.BoxGroupWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.BoxGroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CDSPackageWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CDSPackageDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericExtensionWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericExtensionDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ExternalReferenceWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO))]
    public partial class DetailDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO[] ExternalReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopicDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopicTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerReference {
            get {
                return this.CustomerReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerReferenceField, value) != true)) {
                    this.CustomerReferenceField = value;
                    this.RaisePropertyChanged("CustomerReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO[] ExternalReferences {
            get {
                return this.ExternalReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalReferencesField, value) != true)) {
                    this.ExternalReferencesField = value;
                    this.RaisePropertyChanged("ExternalReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralName {
            get {
                return this.GeneralNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralNameField, value) != true)) {
                    this.GeneralNameField = value;
                    this.RaisePropertyChanged("GeneralName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HistoryId {
            get {
                return this.HistoryIdField;
            }
            set {
                if ((this.HistoryIdField.Equals(value) != true)) {
                    this.HistoryIdField = value;
                    this.RaisePropertyChanged("HistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LockId {
            get {
                return this.LockIdField;
            }
            set {
                if ((this.LockIdField.Equals(value) != true)) {
                    this.LockIdField = value;
                    this.RaisePropertyChanged("LockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TopicDescription {
            get {
                return this.TopicDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicDescriptionField, value) != true)) {
                    this.TopicDescriptionField = value;
                    this.RaisePropertyChanged("TopicDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TopicTypeName {
            get {
                return this.TopicTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicTypeNameField, value) != true)) {
                    this.TopicTypeNameField = value;
                    this.RaisePropertyChanged("TopicTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericServiceObjectDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericModemWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericModemDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSimcardWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSimcardDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericExtensionWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericExtensionDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceDTO))]
    public partial class GenericServiceObjectDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ServiceObjectType ServiceObjectTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ServiceObjectType ServiceObjectType {
            get {
                return this.ServiceObjectTypeField;
            }
            set {
                if ((this.ServiceObjectTypeField.Equals(value) != true)) {
                    this.ServiceObjectTypeField = value;
                    this.RaisePropertyChanged("ServiceObjectType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericDataTerminalWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalDTO))]
    public partial class GenericDataTerminalWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO QueueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueDTO Queue {
            get {
                return this.QueueField;
            }
            set {
                if ((object.ReferenceEquals(this.QueueField, value) != true)) {
                    this.QueueField = value;
                    this.RaisePropertyChanged("Queue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericDataTerminalDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericDataTerminalDTO : ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericModemWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericModemDTO))]
    public partial class GenericModemWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericModemDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericModemDTO : ClassLibraryNotCore.FleetGripIdp.GenericModemWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationLightweightDTO InstallationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationLightweightDTO Installation {
            get {
                return this.InstallationField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationField, value) != true)) {
                    this.InstallationField = value;
                    this.RaisePropertyChanged("Installation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericSimcardWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSimcardDTO))]
    public partial class GenericSimcardWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusReasonDTO ComDeviceStatusReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LanguageDTO LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.MsisdnDTO[] MSISDNsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIN1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIN2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUK1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUK2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.TechnologyDTO TechnologyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClass {
            get {
                return this.ComDeviceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceClassField, value) != true)) {
                    this.ComDeviceClassField = value;
                    this.RaisePropertyChanged("ComDeviceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatus {
            get {
                return this.ComDeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusField, value) != true)) {
                    this.ComDeviceStatusField = value;
                    this.RaisePropertyChanged("ComDeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusReasonDTO ComDeviceStatusReason {
            get {
                return this.ComDeviceStatusReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusReasonField, value) != true)) {
                    this.ComDeviceStatusReasonField = value;
                    this.RaisePropertyChanged("ComDeviceStatusReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCID {
            get {
                return this.ICCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCIDField, value) != true)) {
                    this.ICCIDField = value;
                    this.RaisePropertyChanged("ICCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMSI {
            get {
                return this.IMSIField;
            }
            set {
                if ((object.ReferenceEquals(this.IMSIField, value) != true)) {
                    this.IMSIField = value;
                    this.RaisePropertyChanged("IMSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LanguageDTO Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.MsisdnDTO[] MSISDNs {
            get {
                return this.MSISDNsField;
            }
            set {
                if ((object.ReferenceEquals(this.MSISDNsField, value) != true)) {
                    this.MSISDNsField = value;
                    this.RaisePropertyChanged("MSISDNs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN1 {
            get {
                return this.PIN1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PIN1Field, value) != true)) {
                    this.PIN1Field = value;
                    this.RaisePropertyChanged("PIN1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN2 {
            get {
                return this.PIN2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PIN2Field, value) != true)) {
                    this.PIN2Field = value;
                    this.RaisePropertyChanged("PIN2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUK1 {
            get {
                return this.PUK1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PUK1Field, value) != true)) {
                    this.PUK1Field = value;
                    this.RaisePropertyChanged("PUK1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUK2 {
            get {
                return this.PUK2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PUK2Field, value) != true)) {
                    this.PUK2Field = value;
                    this.RaisePropertyChanged("PUK2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.TechnologyDTO Technology {
            get {
                return this.TechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyField, value) != true)) {
                    this.TechnologyField = value;
                    this.RaisePropertyChanged("Technology");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MsisdnWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.MsisdnDTO))]
    public partial class MsisdnWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsisdnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlusOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityPinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ServiceTypeDTO ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.TechnologyDTO TechnologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwoStagePinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoiceMailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msisdn {
            get {
                return this.MsisdnField;
            }
            set {
                if ((object.ReferenceEquals(this.MsisdnField, value) != true)) {
                    this.MsisdnField = value;
                    this.RaisePropertyChanged("Msisdn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlusOne {
            get {
                return this.PlusOneField;
            }
            set {
                if ((object.ReferenceEquals(this.PlusOneField, value) != true)) {
                    this.PlusOneField = value;
                    this.RaisePropertyChanged("PlusOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityPin {
            get {
                return this.SecurityPinField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityPinField, value) != true)) {
                    this.SecurityPinField = value;
                    this.RaisePropertyChanged("SecurityPin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ServiceTypeDTO ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.TechnologyDTO Technology {
            get {
                return this.TechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyField, value) != true)) {
                    this.TechnologyField = value;
                    this.RaisePropertyChanged("Technology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwoStagePin {
            get {
                return this.TwoStagePinField;
            }
            set {
                if ((object.ReferenceEquals(this.TwoStagePinField, value) != true)) {
                    this.TwoStagePinField = value;
                    this.RaisePropertyChanged("TwoStagePin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoiceMail {
            get {
                return this.VoiceMailField;
            }
            set {
                if ((this.VoiceMailField.Equals(value) != true)) {
                    this.VoiceMailField = value;
                    this.RaisePropertyChanged("VoiceMail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MsisdnDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class MsisdnDTO : ClassLibraryNotCore.FleetGripIdp.MsisdnWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericSimcardDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericSimcardDTO : ClassLibraryNotCore.FleetGripIdp.GenericSimcardWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] FeatureOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> InitialUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO SiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnitsExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitsLeftField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] FeatureOptions {
            get {
                return this.FeatureOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureOptionsField, value) != true)) {
                    this.FeatureOptionsField = value;
                    this.RaisePropertyChanged("FeatureOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InitialUnits {
            get {
                return this.InitialUnitsField;
            }
            set {
                if ((this.InitialUnitsField.Equals(value) != true)) {
                    this.InitialUnitsField = value;
                    this.RaisePropertyChanged("InitialUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnitsExpiration {
            get {
                return this.UnitsExpirationField;
            }
            set {
                if ((this.UnitsExpirationField.Equals(value) != true)) {
                    this.UnitsExpirationField = value;
                    this.RaisePropertyChanged("UnitsExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitsLeft {
            get {
                return this.UnitsLeftField;
            }
            set {
                if ((this.UnitsLeftField.Equals(value) != true)) {
                    this.UnitsLeftField = value;
                    this.RaisePropertyChanged("UnitsLeft");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericSkyFileAccountWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountDTO))]
    public partial class GenericSkyFileAccountWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AtSeaMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AtSeaMailAddress {
            get {
                return this.AtSeaMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AtSeaMailAddressField, value) != true)) {
                    this.AtSeaMailAddressField = value;
                    this.RaisePropertyChanged("AtSeaMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatus {
            get {
                return this.ComDeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusField, value) != true)) {
                    this.ComDeviceStatusField = value;
                    this.RaisePropertyChanged("ComDeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericSkyFileAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericSkyFileAccountDTO : ClassLibraryNotCore.FleetGripIdp.GenericSkyFileAccountWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SimcardDTO SimcardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VesselDTO VesselField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SimcardDTO Simcard {
            get {
                return this.SimcardField;
            }
            set {
                if ((object.ReferenceEquals(this.SimcardField, value) != true)) {
                    this.SimcardField = value;
                    this.RaisePropertyChanged("Simcard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VesselDTO Vessel {
            get {
                return this.VesselField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselField, value) != true)) {
                    this.VesselField = value;
                    this.RaisePropertyChanged("Vessel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimcardWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SimcardDTO))]
    public partial class SimcardWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusReasonDTO ComDeviceStatusReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LanguageDTO LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.MsisdnDTO[] MSISDNsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIN1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIN2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUK1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUK2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.TechnologyDTO TechnologyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClass {
            get {
                return this.ComDeviceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceClassField, value) != true)) {
                    this.ComDeviceClassField = value;
                    this.RaisePropertyChanged("ComDeviceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatus {
            get {
                return this.ComDeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusField, value) != true)) {
                    this.ComDeviceStatusField = value;
                    this.RaisePropertyChanged("ComDeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusReasonDTO ComDeviceStatusReason {
            get {
                return this.ComDeviceStatusReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusReasonField, value) != true)) {
                    this.ComDeviceStatusReasonField = value;
                    this.RaisePropertyChanged("ComDeviceStatusReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCID {
            get {
                return this.ICCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCIDField, value) != true)) {
                    this.ICCIDField = value;
                    this.RaisePropertyChanged("ICCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMSI {
            get {
                return this.IMSIField;
            }
            set {
                if ((object.ReferenceEquals(this.IMSIField, value) != true)) {
                    this.IMSIField = value;
                    this.RaisePropertyChanged("IMSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LanguageDTO Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.MsisdnDTO[] MSISDNs {
            get {
                return this.MSISDNsField;
            }
            set {
                if ((object.ReferenceEquals(this.MSISDNsField, value) != true)) {
                    this.MSISDNsField = value;
                    this.RaisePropertyChanged("MSISDNs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN1 {
            get {
                return this.PIN1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PIN1Field, value) != true)) {
                    this.PIN1Field = value;
                    this.RaisePropertyChanged("PIN1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN2 {
            get {
                return this.PIN2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PIN2Field, value) != true)) {
                    this.PIN2Field = value;
                    this.RaisePropertyChanged("PIN2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUK1 {
            get {
                return this.PUK1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PUK1Field, value) != true)) {
                    this.PUK1Field = value;
                    this.RaisePropertyChanged("PUK1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUK2 {
            get {
                return this.PUK2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PUK2Field, value) != true)) {
                    this.PUK2Field = value;
                    this.RaisePropertyChanged("PUK2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.TechnologyDTO Technology {
            get {
                return this.TechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyField, value) != true)) {
                    this.TechnologyField = value;
                    this.RaisePropertyChanged("Technology");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimcardDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class SimcardDTO : ClassLibraryNotCore.FleetGripIdp.SimcardWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] FeatureOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> InitialUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO SiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnitsExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitsLeftField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] FeatureOptions {
            get {
                return this.FeatureOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureOptionsField, value) != true)) {
                    this.FeatureOptionsField = value;
                    this.RaisePropertyChanged("FeatureOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InitialUnits {
            get {
                return this.InitialUnitsField;
            }
            set {
                if ((this.InitialUnitsField.Equals(value) != true)) {
                    this.InitialUnitsField = value;
                    this.RaisePropertyChanged("InitialUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnitsExpiration {
            get {
                return this.UnitsExpirationField;
            }
            set {
                if ((this.UnitsExpirationField.Equals(value) != true)) {
                    this.UnitsExpirationField = value;
                    this.RaisePropertyChanged("UnitsExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitsLeft {
            get {
                return this.UnitsLeftField;
            }
            set {
                if ((this.UnitsLeftField.Equals(value) != true)) {
                    this.UnitsLeftField = value;
                    this.RaisePropertyChanged("UnitsLeft");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselWritableDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselDTO))]
    public partial class SiteDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteType SiteTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate {
            get {
                return this.IsPrivateField;
            }
            set {
                if ((this.IsPrivateField.Equals(value) != true)) {
                    this.IsPrivateField = value;
                    this.RaisePropertyChanged("IsPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteType SiteType {
            get {
                return this.SiteTypeField;
            }
            set {
                if ((this.SiteTypeField.Equals(value) != true)) {
                    this.SiteTypeField = value;
                    this.RaisePropertyChanged("SiteType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AircraftWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.AircraftDTO))]
    public partial class AircraftWritableDTO : ClassLibraryNotCore.FleetGripIdp.SiteDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AESIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AircraftClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AntennaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryOfRegistryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICAOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TailNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AESID {
            get {
                return this.AESIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AESIDField, value) != true)) {
                    this.AESIDField = value;
                    this.RaisePropertyChanged("AESID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AircraftClass {
            get {
                return this.AircraftClassField;
            }
            set {
                if ((object.ReferenceEquals(this.AircraftClassField, value) != true)) {
                    this.AircraftClassField = value;
                    this.RaisePropertyChanged("AircraftClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Antenna {
            get {
                return this.AntennaField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaField, value) != true)) {
                    this.AntennaField = value;
                    this.RaisePropertyChanged("Antenna");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryOfRegistryId {
            get {
                return this.CountryOfRegistryIdField;
            }
            set {
                if ((this.CountryOfRegistryIdField.Equals(value) != true)) {
                    this.CountryOfRegistryIdField = value;
                    this.RaisePropertyChanged("CountryOfRegistryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICAO {
            get {
                return this.ICAOField;
            }
            set {
                if ((object.ReferenceEquals(this.ICAOField, value) != true)) {
                    this.ICAOField = value;
                    this.RaisePropertyChanged("ICAO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TailNumber {
            get {
                return this.TailNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TailNumberField, value) != true)) {
                    this.TailNumberField = value;
                    this.RaisePropertyChanged("TailNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AircraftDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class AircraftDTO : ClassLibraryNotCore.FleetGripIdp.AircraftWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingSiteGroupsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallations {
            get {
                return this.ContainingInstallationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingInstallationsField, value) != true)) {
                    this.ContainingInstallationsField = value;
                    this.RaisePropertyChanged("ContainingInstallations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingSiteGroups {
            get {
                return this.ContainingSiteGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingSiteGroupsField, value) != true)) {
                    this.ContainingSiteGroupsField = value;
                    this.RaisePropertyChanged("ContainingSiteGroups");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.InstallationDTO))]
    public partial class InstallationWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationItemDTO[] InstallationItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallationStateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallStatusDTO InstallationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO InstallationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InterfaceReferenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO SiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallationID {
            get {
                return this.InstallationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationIDField, value) != true)) {
                    this.InstallationIDField = value;
                    this.RaisePropertyChanged("InstallationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationItemDTO[] InstallationItems {
            get {
                return this.InstallationItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationItemsField, value) != true)) {
                    this.InstallationItemsField = value;
                    this.RaisePropertyChanged("InstallationItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallationStateDate {
            get {
                return this.InstallationStateDateField;
            }
            set {
                if ((this.InstallationStateDateField.Equals(value) != true)) {
                    this.InstallationStateDateField = value;
                    this.RaisePropertyChanged("InstallationStateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallStatusDTO InstallationStatus {
            get {
                return this.InstallationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationStatusField, value) != true)) {
                    this.InstallationStatusField = value;
                    this.RaisePropertyChanged("InstallationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallTypeDTO InstallationType {
            get {
                return this.InstallationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationTypeField, value) != true)) {
                    this.InstallationTypeField = value;
                    this.RaisePropertyChanged("InstallationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationTypeGroupDTO InstallationTypeGroup {
            get {
                return this.InstallationTypeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationTypeGroupField, value) != true)) {
                    this.InstallationTypeGroupField = value;
                    this.RaisePropertyChanged("InstallationTypeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InterfaceReferenceID {
            get {
                return this.InterfaceReferenceIDField;
            }
            set {
                if ((this.InterfaceReferenceIDField.Equals(value) != true)) {
                    this.InterfaceReferenceIDField = value;
                    this.RaisePropertyChanged("InterfaceReferenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModemID {
            get {
                return this.ModemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModemIDField, value) != true)) {
                    this.ModemIDField = value;
                    this.RaisePropertyChanged("ModemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallationDTO : ClassLibraryNotCore.FleetGripIdp.InstallationWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ContactDTO OperationalContactField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ContactDTO OperationalContact {
            get {
                return this.OperationalContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalContactField, value) != true)) {
                    this.OperationalContactField = value;
                    this.RaisePropertyChanged("OperationalContact");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ContactDTO))]
    public partial class ContactWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LocationDTO LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrHomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaluteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attn {
            get {
                return this.AttnField;
            }
            set {
                if ((object.ReferenceEquals(this.AttnField, value) != true)) {
                    this.AttnField = value;
                    this.RaisePropertyChanged("Attn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LocationDTO Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrFax {
            get {
                return this.PhoneNrFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrFaxField, value) != true)) {
                    this.PhoneNrFaxField = value;
                    this.RaisePropertyChanged("PhoneNrFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrHome {
            get {
                return this.PhoneNrHomeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrHomeField, value) != true)) {
                    this.PhoneNrHomeField = value;
                    this.RaisePropertyChanged("PhoneNrHome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrMobile {
            get {
                return this.PhoneNrMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrMobileField, value) != true)) {
                    this.PhoneNrMobileField = value;
                    this.RaisePropertyChanged("PhoneNrMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrWork {
            get {
                return this.PhoneNrWorkField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrWorkField, value) != true)) {
                    this.PhoneNrWorkField = value;
                    this.RaisePropertyChanged("PhoneNrWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salute {
            get {
                return this.SaluteField;
            }
            set {
                if ((object.ReferenceEquals(this.SaluteField, value) != true)) {
                    this.SaluteField = value;
                    this.RaisePropertyChanged("Salute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street1 {
            get {
                return this.Street1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street1Field, value) != true)) {
                    this.Street1Field = value;
                    this.RaisePropertyChanged("Street1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street2 {
            get {
                return this.Street2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street2Field, value) != true)) {
                    this.Street2Field = value;
                    this.RaisePropertyChanged("Street2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street3 {
            get {
                return this.Street3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street3Field, value) != true)) {
                    this.Street3Field = value;
                    this.RaisePropertyChanged("Street3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ContactDTO : ClassLibraryNotCore.FleetGripIdp.ContactWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaticSiteWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.StaticSiteDTO))]
    public partial class StaticSiteWritableDTO : ClassLibraryNotCore.FleetGripIdp.SiteDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LocationDTO CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LocationDTO Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Global {
            get {
                return this.GlobalField;
            }
            set {
                if ((this.GlobalField.Equals(value) != true)) {
                    this.GlobalField = value;
                    this.RaisePropertyChanged("Global");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaticSiteDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class StaticSiteDTO : ClassLibraryNotCore.FleetGripIdp.StaticSiteWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingSiteGroupsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallations {
            get {
                return this.ContainingInstallationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingInstallationsField, value) != true)) {
                    this.ContainingInstallationsField = value;
                    this.RaisePropertyChanged("ContainingInstallations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingSiteGroups {
            get {
                return this.ContainingSiteGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingSiteGroupsField, value) != true)) {
                    this.ContainingSiteGroupsField = value;
                    this.RaisePropertyChanged("ContainingSiteGroups");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteTrackingObjectWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectDTO))]
    public partial class SiteTrackingObjectWritableDTO : ClassLibraryNotCore.FleetGripIdp.SiteDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTrackDeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceUniqueIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTrackDeviceID {
            get {
                return this.DataTrackDeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTrackDeviceIDField, value) != true)) {
                    this.DataTrackDeviceIDField = value;
                    this.RaisePropertyChanged("DataTrackDeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceUniqueID {
            get {
                return this.DeviceUniqueIDField;
            }
            set {
                if ((this.DeviceUniqueIDField.Equals(value) != true)) {
                    this.DeviceUniqueIDField = value;
                    this.RaisePropertyChanged("DeviceUniqueID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteTrackingObjectDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class SiteTrackingObjectDTO : ClassLibraryNotCore.FleetGripIdp.SiteTrackingObjectWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.CompanyDTO CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SimcardDTO SimcardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] SiteGroupsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.CompanyDTO Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SimcardDTO Simcard {
            get {
                return this.SimcardField;
            }
            set {
                if ((object.ReferenceEquals(this.SimcardField, value) != true)) {
                    this.SimcardField = value;
                    this.RaisePropertyChanged("Simcard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] SiteGroups {
            get {
                return this.SiteGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteGroupsField, value) != true)) {
                    this.SiteGroupsField = value;
                    this.RaisePropertyChanged("SiteGroups");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CompanyDTO))]
    public partial class CompanyWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.CurrencyDTO CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DB_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUNSBranchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUNSBusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUNSNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.DUNSStatusDTO DUNSStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ExchPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FlagDirectSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LanguageDTO LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LocationDTO LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrHomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaluteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VatTariffDTO VatTariffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attn {
            get {
                return this.AttnField;
            }
            set {
                if ((object.ReferenceEquals(this.AttnField, value) != true)) {
                    this.AttnField = value;
                    this.RaisePropertyChanged("Attn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrmId {
            get {
                return this.CrmIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CrmIdField, value) != true)) {
                    this.CrmIdField = value;
                    this.RaisePropertyChanged("CrmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.CurrencyDTO Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DB_ID {
            get {
                return this.DB_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.DB_IDField, value) != true)) {
                    this.DB_IDField = value;
                    this.RaisePropertyChanged("DB_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUNSBranchNumber {
            get {
                return this.DUNSBranchNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DUNSBranchNumberField, value) != true)) {
                    this.DUNSBranchNumberField = value;
                    this.RaisePropertyChanged("DUNSBranchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUNSBusinessName {
            get {
                return this.DUNSBusinessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DUNSBusinessNameField, value) != true)) {
                    this.DUNSBusinessNameField = value;
                    this.RaisePropertyChanged("DUNSBusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUNSNumber {
            get {
                return this.DUNSNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DUNSNumberField, value) != true)) {
                    this.DUNSNumberField = value;
                    this.RaisePropertyChanged("DUNSNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.DUNSStatusDTO DUNSStatus {
            get {
                return this.DUNSStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DUNSStatusField, value) != true)) {
                    this.DUNSStatusField = value;
                    this.RaisePropertyChanged("DUNSStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ExchPremium {
            get {
                return this.ExchPremiumField;
            }
            set {
                if ((this.ExchPremiumField.Equals(value) != true)) {
                    this.ExchPremiumField = value;
                    this.RaisePropertyChanged("ExchPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FlagDirectSales {
            get {
                return this.FlagDirectSalesField;
            }
            set {
                if ((this.FlagDirectSalesField.Equals(value) != true)) {
                    this.FlagDirectSalesField = value;
                    this.RaisePropertyChanged("FlagDirectSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LanguageDTO Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LocationDTO Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrFax {
            get {
                return this.PhoneNrFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrFaxField, value) != true)) {
                    this.PhoneNrFaxField = value;
                    this.RaisePropertyChanged("PhoneNrFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrHome {
            get {
                return this.PhoneNrHomeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrHomeField, value) != true)) {
                    this.PhoneNrHomeField = value;
                    this.RaisePropertyChanged("PhoneNrHome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrMobile {
            get {
                return this.PhoneNrMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrMobileField, value) != true)) {
                    this.PhoneNrMobileField = value;
                    this.RaisePropertyChanged("PhoneNrMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNrWork {
            get {
                return this.PhoneNrWorkField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrWorkField, value) != true)) {
                    this.PhoneNrWorkField = value;
                    this.RaisePropertyChanged("PhoneNrWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salute {
            get {
                return this.SaluteField;
            }
            set {
                if ((object.ReferenceEquals(this.SaluteField, value) != true)) {
                    this.SaluteField = value;
                    this.RaisePropertyChanged("Salute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street1 {
            get {
                return this.Street1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street1Field, value) != true)) {
                    this.Street1Field = value;
                    this.RaisePropertyChanged("Street1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street2 {
            get {
                return this.Street2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street2Field, value) != true)) {
                    this.Street2Field = value;
                    this.RaisePropertyChanged("Street2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street3 {
            get {
                return this.Street3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street3Field, value) != true)) {
                    this.Street3Field = value;
                    this.RaisePropertyChanged("Street3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VatNumber {
            get {
                return this.VatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VatNumberField, value) != true)) {
                    this.VatNumberField = value;
                    this.RaisePropertyChanged("VatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VatTariffDTO VatTariff {
            get {
                return this.VatTariffField;
            }
            set {
                if ((object.ReferenceEquals(this.VatTariffField, value) != true)) {
                    this.VatTariffField = value;
                    this.RaisePropertyChanged("VatTariff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebAddress {
            get {
                return this.WebAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WebAddressField, value) != true)) {
                    this.WebAddressField = value;
                    this.RaisePropertyChanged("WebAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class CompanyDTO : ClassLibraryNotCore.FleetGripIdp.CompanyWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VesselWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.VesselDTO))]
    public partial class VesselWritableDTO : ClassLibraryNotCore.FleetGripIdp.SiteDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FishingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GrossTonnageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LrImoShipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MMSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ManagerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerCountryOfDomicileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OwnerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerCountryOfDomicileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortOfRegistryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VesselTypeDTO VesselTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallSign {
            get {
                return this.CallSignField;
            }
            set {
                if ((object.ReferenceEquals(this.CallSignField, value) != true)) {
                    this.CallSignField = value;
                    this.RaisePropertyChanged("CallSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FishingNumber {
            get {
                return this.FishingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FishingNumberField, value) != true)) {
                    this.FishingNumberField = value;
                    this.RaisePropertyChanged("FishingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GrossTonnage {
            get {
                return this.GrossTonnageField;
            }
            set {
                if ((this.GrossTonnageField.Equals(value) != true)) {
                    this.GrossTonnageField = value;
                    this.RaisePropertyChanged("GrossTonnage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LrImoShipNo {
            get {
                return this.LrImoShipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LrImoShipNoField, value) != true)) {
                    this.LrImoShipNoField = value;
                    this.RaisePropertyChanged("LrImoShipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MMSI {
            get {
                return this.MMSIField;
            }
            set {
                if ((object.ReferenceEquals(this.MMSIField, value) != true)) {
                    this.MMSIField = value;
                    this.RaisePropertyChanged("MMSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ManagerCode {
            get {
                return this.ManagerCodeField;
            }
            set {
                if ((this.ManagerCodeField.Equals(value) != true)) {
                    this.ManagerCodeField = value;
                    this.RaisePropertyChanged("ManagerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerContactPerson {
            get {
                return this.ManagerContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerContactPersonField, value) != true)) {
                    this.ManagerContactPersonField = value;
                    this.RaisePropertyChanged("ManagerContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerCountryOfDomicileName {
            get {
                return this.ManagerCountryOfDomicileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerCountryOfDomicileNameField, value) != true)) {
                    this.ManagerCountryOfDomicileNameField = value;
                    this.RaisePropertyChanged("ManagerCountryOfDomicileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerEmail {
            get {
                return this.ManagerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerEmailField, value) != true)) {
                    this.ManagerEmailField = value;
                    this.RaisePropertyChanged("ManagerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerPhoneNumber {
            get {
                return this.ManagerPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerPhoneNumberField, value) != true)) {
                    this.ManagerPhoneNumberField = value;
                    this.RaisePropertyChanged("ManagerPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OwnerCode {
            get {
                return this.OwnerCodeField;
            }
            set {
                if ((this.OwnerCodeField.Equals(value) != true)) {
                    this.OwnerCodeField = value;
                    this.RaisePropertyChanged("OwnerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerContactPerson {
            get {
                return this.OwnerContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerContactPersonField, value) != true)) {
                    this.OwnerContactPersonField = value;
                    this.RaisePropertyChanged("OwnerContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerCountryOfDomicile {
            get {
                return this.OwnerCountryOfDomicileField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerCountryOfDomicileField, value) != true)) {
                    this.OwnerCountryOfDomicileField = value;
                    this.RaisePropertyChanged("OwnerCountryOfDomicile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerEmail {
            get {
                return this.OwnerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerEmailField, value) != true)) {
                    this.OwnerEmailField = value;
                    this.RaisePropertyChanged("OwnerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerPhoneNumber {
            get {
                return this.OwnerPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPhoneNumberField, value) != true)) {
                    this.OwnerPhoneNumberField = value;
                    this.RaisePropertyChanged("OwnerPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortOfRegistry {
            get {
                return this.PortOfRegistryField;
            }
            set {
                if ((object.ReferenceEquals(this.PortOfRegistryField, value) != true)) {
                    this.PortOfRegistryField = value;
                    this.RaisePropertyChanged("PortOfRegistry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VesselTypeDTO VesselType {
            get {
                return this.VesselTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselTypeField, value) != true)) {
                    this.VesselTypeField = value;
                    this.RaisePropertyChanged("VesselType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VesselDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class VesselDTO : ClassLibraryNotCore.FleetGripIdp.VesselWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingFleetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SkyFileAccountLightweightDTO[] ContainingSkyFileAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VizadaBoxLightweightDTO[] ContainingVizadaBoxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkyFileCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VizadaBoxCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteGroupLightweightDTO[] ContainingFleets {
            get {
                return this.ContainingFleetsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingFleetsField, value) != true)) {
                    this.ContainingFleetsField = value;
                    this.RaisePropertyChanged("ContainingFleets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.InstallationDTO[] ContainingInstallations {
            get {
                return this.ContainingInstallationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingInstallationsField, value) != true)) {
                    this.ContainingInstallationsField = value;
                    this.RaisePropertyChanged("ContainingInstallations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SkyFileAccountLightweightDTO[] ContainingSkyFileAccounts {
            get {
                return this.ContainingSkyFileAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingSkyFileAccountsField, value) != true)) {
                    this.ContainingSkyFileAccountsField = value;
                    this.RaisePropertyChanged("ContainingSkyFileAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VizadaBoxLightweightDTO[] ContainingVizadaBoxes {
            get {
                return this.ContainingVizadaBoxesField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainingVizadaBoxesField, value) != true)) {
                    this.ContainingVizadaBoxesField = value;
                    this.RaisePropertyChanged("ContainingVizadaBoxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkyFileCount {
            get {
                return this.SkyFileCountField;
            }
            set {
                if ((this.SkyFileCountField.Equals(value) != true)) {
                    this.SkyFileCountField = value;
                    this.RaisePropertyChanged("SkyFileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VizadaBoxCount {
            get {
                return this.VizadaBoxCountField;
            }
            set {
                if ((this.VizadaBoxCountField.Equals(value) != true)) {
                    this.VizadaBoxCountField = value;
                    this.RaisePropertyChanged("VizadaBoxCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericOnBoardPortalWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalDTO))]
    public partial class GenericOnBoardPortalWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.PackageDTO InitiallyActivatedWithField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAdminPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAdminUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OBPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> OBPKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkyfileUsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatus {
            get {
                return this.ComDeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusField, value) != true)) {
                    this.ComDeviceStatusField = value;
                    this.RaisePropertyChanged("ComDeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.PackageDTO InitiallyActivatedWith {
            get {
                return this.InitiallyActivatedWithField;
            }
            set {
                if ((object.ReferenceEquals(this.InitiallyActivatedWithField, value) != true)) {
                    this.InitiallyActivatedWithField = value;
                    this.RaisePropertyChanged("InitiallyActivatedWith");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAdminPassword {
            get {
                return this.LocalAdminPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAdminPasswordField, value) != true)) {
                    this.LocalAdminPasswordField = value;
                    this.RaisePropertyChanged("LocalAdminPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAdminUsername {
            get {
                return this.LocalAdminUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAdminUsernameField, value) != true)) {
                    this.LocalAdminUsernameField = value;
                    this.RaisePropertyChanged("LocalAdminUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OBPID {
            get {
                return this.OBPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OBPIDField, value) != true)) {
                    this.OBPIDField = value;
                    this.RaisePropertyChanged("OBPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> OBPKey {
            get {
                return this.OBPKeyField;
            }
            set {
                if ((this.OBPKeyField.Equals(value) != true)) {
                    this.OBPKeyField = value;
                    this.RaisePropertyChanged("OBPKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkyfileUsername {
            get {
                return this.SkyfileUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkyfileUsernameField, value) != true)) {
                    this.SkyfileUsernameField = value;
                    this.RaisePropertyChanged("SkyfileUsername");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericOnBoardPortalDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericOnBoardPortalDTO : ClassLibraryNotCore.FleetGripIdp.GenericOnBoardPortalWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SimcardDTO SimcardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VesselDTO VesselField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SimcardDTO Simcard {
            get {
                return this.SimcardField;
            }
            set {
                if ((object.ReferenceEquals(this.SimcardField, value) != true)) {
                    this.SimcardField = value;
                    this.RaisePropertyChanged("Simcard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VesselDTO Vessel {
            get {
                return this.VesselField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselField, value) != true)) {
                    this.VesselField = value;
                    this.RaisePropertyChanged("Vessel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericXChangeBoxWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxDTO))]
    public partial class GenericXChangeBoxWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HardwareIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProductionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxSerialNumber {
            get {
                return this.BoxSerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxSerialNumberField, value) != true)) {
                    this.BoxSerialNumberField = value;
                    this.RaisePropertyChanged("BoxSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxType {
            get {
                return this.BoxTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxTypeField, value) != true)) {
                    this.BoxTypeField = value;
                    this.RaisePropertyChanged("BoxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HardwareID {
            get {
                return this.HardwareIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareIDField, value) != true)) {
                    this.HardwareIDField = value;
                    this.RaisePropertyChanged("HardwareID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProductionDate {
            get {
                return this.ProductionDateField;
            }
            set {
                if ((this.ProductionDateField.Equals(value) != true)) {
                    this.ProductionDateField = value;
                    this.RaisePropertyChanged("ProductionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericXChangeBoxDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericXChangeBoxDTO : ClassLibraryNotCore.FleetGripIdp.GenericXChangeBoxWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.BoxGroupDTO[] BoxGroupsFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.CDSPackageDTO[] CDSPackagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.VesselLightweightDTO[] VesselsFromField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.BoxGroupDTO[] BoxGroupsFrom {
            get {
                return this.BoxGroupsFromField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxGroupsFromField, value) != true)) {
                    this.BoxGroupsFromField = value;
                    this.RaisePropertyChanged("BoxGroupsFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.CDSPackageDTO[] CDSPackages {
            get {
                return this.CDSPackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.CDSPackagesField, value) != true)) {
                    this.CDSPackagesField = value;
                    this.RaisePropertyChanged("CDSPackages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.VesselLightweightDTO[] VesselsFrom {
            get {
                return this.VesselsFromField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselsFromField, value) != true)) {
                    this.VesselsFromField = value;
                    this.RaisePropertyChanged("VesselsFrom");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxGroupWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.BoxGroupDTO))]
    public partial class BoxGroupWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BackOfficeGroupExtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoftwareVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BackOfficeGroupExtID {
            get {
                return this.BackOfficeGroupExtIDField;
            }
            set {
                if ((this.BackOfficeGroupExtIDField.Equals(value) != true)) {
                    this.BackOfficeGroupExtIDField = value;
                    this.RaisePropertyChanged("BackOfficeGroupExtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoftwareVersion {
            get {
                return this.SoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftwareVersionField, value) != true)) {
                    this.SoftwareVersionField = value;
                    this.RaisePropertyChanged("SoftwareVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class BoxGroupDTO : ClassLibraryNotCore.FleetGripIdp.BoxGroupWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BOGroupOwnerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BOGroupOwnerName {
            get {
                return this.BOGroupOwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BOGroupOwnerNameField, value) != true)) {
                    this.BOGroupOwnerNameField = value;
                    this.RaisePropertyChanged("BOGroupOwnerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDSPackageWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.CDSPackageDTO))]
    public partial class CDSPackageWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ContentTagIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ContentTagIds {
            get {
                return this.ContentTagIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTagIdsField, value) != true)) {
                    this.ContentTagIdsField = value;
                    this.RaisePropertyChanged("ContentTagIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDSPackageDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class CDSPackageDTO : ClassLibraryNotCore.FleetGripIdp.CDSPackageWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericExtensionWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericExtensionDTO))]
    public partial class GenericExtensionWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OffNetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnNetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtensionNumber {
            get {
                return this.ExtensionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionNumberField, value) != true)) {
                    this.ExtensionNumberField = value;
                    this.RaisePropertyChanged("ExtensionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffNetNumber {
            get {
                return this.OffNetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OffNetNumberField, value) != true)) {
                    this.OffNetNumberField = value;
                    this.RaisePropertyChanged("OffNetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnNetNumber {
            get {
                return this.OnNetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OnNetNumberField, value) != true)) {
                    this.OnNetNumberField = value;
                    this.RaisePropertyChanged("OnNetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericExtensionDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericExtensionDTO : ClassLibraryNotCore.FleetGripIdp.GenericExtensionWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteDTO SiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteDTO Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericUniversalCardWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardDTO))]
    public partial class GenericUniversalCardWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstUsageDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InitialCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.LanguageDTO LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastReloadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.PackageDTO PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Pin9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainingCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberWTLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TechnicalStatusModifiedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceClassDTO ComDeviceClass {
            get {
                return this.ComDeviceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceClassField, value) != true)) {
                    this.ComDeviceClassField = value;
                    this.RaisePropertyChanged("ComDeviceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ComDeviceStatusDTO ComDeviceStatus {
            get {
                return this.ComDeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ComDeviceStatusField, value) != true)) {
                    this.ComDeviceStatusField = value;
                    this.RaisePropertyChanged("ComDeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstUsageDate {
            get {
                return this.FirstUsageDateField;
            }
            set {
                if ((this.FirstUsageDateField.Equals(value) != true)) {
                    this.FirstUsageDateField = value;
                    this.RaisePropertyChanged("FirstUsageDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InitialCredit {
            get {
                return this.InitialCreditField;
            }
            set {
                if ((this.InitialCreditField.Equals(value) != true)) {
                    this.InitialCreditField = value;
                    this.RaisePropertyChanged("InitialCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.LanguageDTO Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastReloadDate {
            get {
                return this.LastReloadDateField;
            }
            set {
                if ((this.LastReloadDateField.Equals(value) != true)) {
                    this.LastReloadDateField = value;
                    this.RaisePropertyChanged("LastReloadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderingDate {
            get {
                return this.OrderingDateField;
            }
            set {
                if ((this.OrderingDateField.Equals(value) != true)) {
                    this.OrderingDateField = value;
                    this.RaisePropertyChanged("OrderingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.PackageDTO Package {
            get {
                return this.PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageField, value) != true)) {
                    this.PackageField = value;
                    this.RaisePropertyChanged("Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin9 {
            get {
                return this.Pin9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Pin9Field, value) != true)) {
                    this.Pin9Field = value;
                    this.RaisePropertyChanged("Pin9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcessingDate {
            get {
                return this.ProcessingDateField;
            }
            set {
                if ((this.ProcessingDateField.Equals(value) != true)) {
                    this.ProcessingDateField = value;
                    this.RaisePropertyChanged("ProcessingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RemainingCredit {
            get {
                return this.RemainingCreditField;
            }
            set {
                if ((this.RemainingCreditField.Equals(value) != true)) {
                    this.RemainingCreditField = value;
                    this.RaisePropertyChanged("RemainingCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumberWTL {
            get {
                return this.SerialNumberWTLField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberWTLField, value) != true)) {
                    this.SerialNumberWTLField = value;
                    this.RaisePropertyChanged("SerialNumberWTL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TechnicalStatusModifiedDate {
            get {
                return this.TechnicalStatusModifiedDateField;
            }
            set {
                if ((this.TechnicalStatusModifiedDateField.Equals(value) != true)) {
                    this.TechnicalStatusModifiedDateField = value;
                    this.RaisePropertyChanged("TechnicalStatusModifiedDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericUniversalCardDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericUniversalCardDTO : ClassLibraryNotCore.FleetGripIdp.GenericUniversalCardWritableDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericTelemedDeviceWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceDTO))]
    public partial class GenericTelemedDeviceWritableDTO : ClassLibraryNotCore.FleetGripIdp.GenericServiceObjectDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DeployedMedicalDevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.TelemedDeviceStatusDTO DeviceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirmwareDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastStatusChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaxAllowedBandwidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalAssistanceCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextRecalibrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubscriptionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DeployedMedicalDevices {
            get {
                return this.DeployedMedicalDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeployedMedicalDevicesField, value) != true)) {
                    this.DeployedMedicalDevicesField = value;
                    this.RaisePropertyChanged("DeployedMedicalDevices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.TelemedDeviceStatusDTO DeviceStatus {
            get {
                return this.DeviceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceStatusField, value) != true)) {
                    this.DeviceStatusField = value;
                    this.RaisePropertyChanged("DeviceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirmwareDate {
            get {
                return this.FirmwareDateField;
            }
            set {
                if ((this.FirmwareDateField.Equals(value) != true)) {
                    this.FirmwareDateField = value;
                    this.RaisePropertyChanged("FirmwareDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastStatusChange {
            get {
                return this.LastStatusChangeField;
            }
            set {
                if ((this.LastStatusChangeField.Equals(value) != true)) {
                    this.LastStatusChangeField = value;
                    this.RaisePropertyChanged("LastStatusChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaxAllowedBandwidth {
            get {
                return this.MaxAllowedBandwidthField;
            }
            set {
                if ((this.MaxAllowedBandwidthField.Equals(value) != true)) {
                    this.MaxAllowedBandwidthField = value;
                    this.RaisePropertyChanged("MaxAllowedBandwidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalAssistanceCenter {
            get {
                return this.MedicalAssistanceCenterField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalAssistanceCenterField, value) != true)) {
                    this.MedicalAssistanceCenterField = value;
                    this.RaisePropertyChanged("MedicalAssistanceCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextRecalibrationDate {
            get {
                return this.NextRecalibrationDateField;
            }
            set {
                if ((this.NextRecalibrationDateField.Equals(value) != true)) {
                    this.NextRecalibrationDateField = value;
                    this.RaisePropertyChanged("NextRecalibrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionID {
            get {
                return this.SubscriptionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionIDField, value) != true)) {
                    this.SubscriptionIDField = value;
                    this.RaisePropertyChanged("SubscriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubscriptionStatus {
            get {
                return this.SubscriptionStatusField;
            }
            set {
                if ((this.SubscriptionStatusField.Equals(value) != true)) {
                    this.SubscriptionStatusField = value;
                    this.RaisePropertyChanged("SubscriptionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericTelemedDeviceDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class GenericTelemedDeviceDTO : ClassLibraryNotCore.FleetGripIdp.GenericTelemedDeviceWritableDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO SiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.SiteLightweightDTO Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalReferenceWritableDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClassLibraryNotCore.FleetGripIdp.ExternalReferenceDTO))]
    public partial class ExternalReferenceWritableDTO : ClassLibraryNotCore.FleetGripIdp.DetailDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ExternalSystemDTO ExternalSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ExternalTypeDTO ExternalTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalName {
            get {
                return this.ExternalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalNameField, value) != true)) {
                    this.ExternalNameField = value;
                    this.RaisePropertyChanged("ExternalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ExternalSystemDTO ExternalSystem {
            get {
                return this.ExternalSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalSystemField, value) != true)) {
                    this.ExternalSystemField = value;
                    this.RaisePropertyChanged("ExternalSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ExternalTypeDTO ExternalType {
            get {
                return this.ExternalTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalTypeField, value) != true)) {
                    this.ExternalTypeField = value;
                    this.RaisePropertyChanged("ExternalType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceObjectType", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    public enum ServiceObjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericSimcard = 241000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericSkyFileAccount = 242000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericOnBoardPortal = 243000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericXChangeBox = 244000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericExtension = 245000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericUniversalCard = 246000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericModem = 250000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericTelemedDevice = 256000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericDataTerminal = 258000,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFeatureDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class ServiceFeatureDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] ChildFeatureOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClassLibraryNotCore.FleetGripIdp.NameValueDTO[] OptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.ServiceFeatureDTO[] ChildFeatureOptions {
            get {
                return this.ChildFeatureOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildFeatureOptionsField, value) != true)) {
                    this.ChildFeatureOptionsField = value;
                    this.RaisePropertyChanged("ChildFeatureOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClassLibraryNotCore.FleetGripIdp.NameValueDTO[] Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameValueDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class NameValueDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationItemDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessMapAPI")]
    [System.SerializableAttribute()]
    public partial class InstallationItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://vizada.com/businessmap/2.10.0.0/fleetgripidp", ConfigurationName="FleetGripIdp.IFleetGripIdp")]
    public interface IFleetGripIdp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/DeleteMessageQueue", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/DeleteMessageQu" +
            "eueResponse")]
        ClassLibraryNotCore.FleetGripIdp.VoidResponse DeleteMessageQueue(int messageQueueId, System.Nullable<System.DateTime> from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/DeleteMessageQueue", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/DeleteMessageQu" +
            "eueResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.VoidResponse> DeleteMessageQueueAsync(int messageQueueId, System.Nullable<System.DateTime> from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetAllMessageQueues", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetAllMessageQu" +
            "euesResponse")]
        ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList GetAllMessageQueues(int pageIndex, int pageSize, string orderMember, bool orderAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetAllMessageQueues", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetAllMessageQu" +
            "euesResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList> GetAllMessageQueuesAsync(int pageIndex, int pageSize, string orderMember, bool orderAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetMessageQueueById", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetMessageQueue" +
            "ByIdResponse")]
        ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse GetMessageQueueById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetMessageQueueById", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetMessageQueue" +
            "ByIdResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse> GetMessageQueueByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/NewMessageQueue", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/NewMessageQueue" +
            "Response")]
        ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse NewMessageQueue(ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/NewMessageQueue", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/NewMessageQueue" +
            "Response")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse> NewMessageQueueAsync(ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/DeleteGenericDataTermina" +
            "l", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/DeleteGenericDa" +
            "taTerminalResponse")]
        ClassLibraryNotCore.FleetGripIdp.VoidResponse DeleteGenericDataTerminal(long dataTerminalId, System.Nullable<System.DateTime> from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/DeleteGenericDataTermina" +
            "l", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/DeleteGenericDa" +
            "taTerminalResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.VoidResponse> DeleteGenericDataTerminalAsync(long dataTerminalId, System.Nullable<System.DateTime> from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetAllGenericDataTermina" +
            "ls", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetAllGenericDa" +
            "taTerminalsResponse")]
        ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList GetAllGenericDataTerminals(int pageIndex, int pageSize, string orderMember, bool orderAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetAllGenericDataTermina" +
            "ls", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetAllGenericDa" +
            "taTerminalsResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList> GetAllGenericDataTerminalsAsync(int pageIndex, int pageSize, string orderMember, bool orderAscending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetGenericDataTerminalBy" +
            "Id", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetGenericDataT" +
            "erminalByIdResponse")]
        ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse GetGenericDataTerminalById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/GetGenericDataTerminalBy" +
            "Id", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/GetGenericDataT" +
            "erminalByIdResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse> GetGenericDataTerminalByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/NewGenericDataTerminal", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/NewGenericDataT" +
            "erminalResponse")]
        ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse NewGenericDataTerminal(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vizada.com/businessmap/fleetgripidp/IFleetGripIdp/NewGenericDataTerminal", ReplyAction="http://vizada.com/businessmap/2.10.0.0/fleetgripidp/IFleetGripIdp/NewGenericDataT" +
            "erminalResponse")]
        System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse> NewGenericDataTerminalAsync(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFleetGripIdpChannel : ClassLibraryNotCore.FleetGripIdp.IFleetGripIdp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FleetGripIdpClient : System.ServiceModel.ClientBase<ClassLibraryNotCore.FleetGripIdp.IFleetGripIdp>, ClassLibraryNotCore.FleetGripIdp.IFleetGripIdp {
        
        public FleetGripIdpClient() {
        }
        
        public FleetGripIdpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FleetGripIdpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FleetGripIdpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FleetGripIdpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClassLibraryNotCore.FleetGripIdp.VoidResponse DeleteMessageQueue(int messageQueueId, System.Nullable<System.DateTime> from) {
            return base.Channel.DeleteMessageQueue(messageQueueId, from);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.VoidResponse> DeleteMessageQueueAsync(int messageQueueId, System.Nullable<System.DateTime> from) {
            return base.Channel.DeleteMessageQueueAsync(messageQueueId, from);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList GetAllMessageQueues(int pageIndex, int pageSize, string orderMember, bool orderAscending) {
            return base.Channel.GetAllMessageQueues(pageIndex, pageSize, orderMember, orderAscending);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponseList> GetAllMessageQueuesAsync(int pageIndex, int pageSize, string orderMember, bool orderAscending) {
            return base.Channel.GetAllMessageQueuesAsync(pageIndex, pageSize, orderMember, orderAscending);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse GetMessageQueueById(int id) {
            return base.Channel.GetMessageQueueById(id);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse> GetMessageQueueByIdAsync(int id) {
            return base.Channel.GetMessageQueueByIdAsync(id);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse NewMessageQueue(ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO request) {
            return base.Channel.NewMessageQueue(request);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.MessageQueueResponse> NewMessageQueueAsync(ClassLibraryNotCore.FleetGripIdp.MessageQueueWritableDTO request) {
            return base.Channel.NewMessageQueueAsync(request);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.VoidResponse DeleteGenericDataTerminal(long dataTerminalId, System.Nullable<System.DateTime> from) {
            return base.Channel.DeleteGenericDataTerminal(dataTerminalId, from);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.VoidResponse> DeleteGenericDataTerminalAsync(long dataTerminalId, System.Nullable<System.DateTime> from) {
            return base.Channel.DeleteGenericDataTerminalAsync(dataTerminalId, from);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList GetAllGenericDataTerminals(int pageIndex, int pageSize, string orderMember, bool orderAscending) {
            return base.Channel.GetAllGenericDataTerminals(pageIndex, pageSize, orderMember, orderAscending);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponseList> GetAllGenericDataTerminalsAsync(int pageIndex, int pageSize, string orderMember, bool orderAscending) {
            return base.Channel.GetAllGenericDataTerminalsAsync(pageIndex, pageSize, orderMember, orderAscending);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse GetGenericDataTerminalById(int id) {
            return base.Channel.GetGenericDataTerminalById(id);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse> GetGenericDataTerminalByIdAsync(int id) {
            return base.Channel.GetGenericDataTerminalByIdAsync(id);
        }
        
        public ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse NewGenericDataTerminal(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO request) {
            return base.Channel.NewGenericDataTerminal(request);
        }
        
        public System.Threading.Tasks.Task<ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalResponse> NewGenericDataTerminalAsync(ClassLibraryNotCore.FleetGripIdp.GenericDataTerminalWritableDTO request) {
            return base.Channel.NewGenericDataTerminalAsync(request);
        }
    }
}
