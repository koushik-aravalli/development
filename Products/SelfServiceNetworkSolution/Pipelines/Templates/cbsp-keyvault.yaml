parameters:
- name: ServiceConnectionName
  type: string
- name: KeyVaultName
  type: string
- name: TenantId
  type: string
  default: '3a15904d-3fd9-4256-a753-beb05cdf0c6d'
- name: ServicePrincipalObjectId
  type: string
- name: EngServicePrincipalObjectId
  type: string
  default: '4c4b0ddb-d71b-4aa9-9a4c-4c14670333bd'
- name: ManagementServicePrincipalObjectId
  type: string
  default: '99c1aead-60b2-42cc-8aa9-8c4bf0254516'
- name: GroupId
  type: string

jobs:
  - job: create_keyvault
    displayName: 'Create CBSP Azure Keyvault'
    steps:
    - task: PowerShell@2
      displayName: 'ps: Get SPN for KV'
      name: get_spn_kv
      inputs:
        targetType: 'inline'
        script: |
          if( "$(environment_alias)" -eq 'p' )
          {
            Write-Host "##vso[task.setvariable variable=objId;isOutput=true]${{ parameters.ManagementServicePrincipalObjectId }}"
          }
          else
          {
            Write-Host "##vso[task.setvariable variable=objId;isOutput=true]${{ parameters.EngServicePrincipalObjectId }}"
          }
    - task: abnamrocbspazure.AbnAmro-CbspAzure-Products.AbnAmro-CbspAzure-Keyvault.AbnAmro-CbspAzure-KeyVault@1
      displayName: '$(environment_alias) : New Network SelfService Key Vault ${{ parameters.KeyVaultName }}'
      enabled: true
      inputs:
        azureSubscription: ${{ parameters.ServiceConnectionName }}
        resourceGroupName: $(resourcegroup_name)
        keyVaultName: ${{ parameters.KeyVaultName }}
        accesspolicy: '[
          {
            "tenantId" : "${{ parameters.TenantId }}",
            "objectId" : "${{ parameters.ServicePrincipalObjectId }}",
            "permissions": {
              "keys": ["list","get","update","create","delete","import","wrapKey","encrypt","decrypt"],
              "secrets": ["list","get","set","delete"],
              "certificates": ["get","list","update"]
            }
          },
          {
            "tenantId" : "${{ parameters.TenantId }}",
            "objectId" : "$(get_spn_kv.objId)",
            "permissions": {
              "keys": ["list","get","update","create","delete","import","wrapKey","encrypt","decrypt"],
              "secrets": ["list","get","set","delete","purge"],
              "certificates": ["get","list","update"]
            }
          },
          {
            "tenantId" : "${{ parameters.TenantId }}",
            "objectId" : "${{ parameters.GroupId }}",
            "permissions": {
              "keys": ["list"],
              "secrets": ["list"],
              "certificates": ["list"]
            }
          }
        ]'