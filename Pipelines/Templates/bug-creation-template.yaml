# This task template can be used in build pipelines to create a bug work-item on the sprint backlog when a previous task in the pipeline has failed.
# Add the template in the pipeline underneath the other tasks like so:
  # - template:  '$(template_path)'
  #   parameters:
  #     TeamName: '<team name>'
  #     ServiceShortName: '<ServiceShortName>'
  #     ScriptPath: '<path to Add-AzureDevopsBoardItem.ps1 script>'

# The `TeamName` parameter should be provided to specify the sprint board on which the bug will be created.
# The template path should be set as a global variable in the pipeline 
# The `ServiceShortName` parameter can be set to add the Service Short Name to the bug work-item title.
# The `ScriptPath` parameter should be set to specify the path to the Add-AzureDevopsBoardItem.ps1 script. NOTE: the script path differs if you checkout multiple repo's in the Job.

# The following global variables should be set in the pipeline:
  # ## variables for bug creation task
  # system_definitionname: $(System.DefinitionName)
  # OrganizationName: 'cbsp-abnamro'
  # ProjectName: 'Azure'
  # ItemTypeName: 'Backlog items'
  # ItemWorkType: 'Bug'
  # ### artifacts path within self repo
  # pwsh_script_path: $(System.DefaultWorkingDirectory)/Products/SelfServiceNetworkSolution/v1/Scripts (NOTE: the script path differs if you checkout multiple repo's in the Job.)
  # ### Path to the bug creation template
  # template_path: <path to template>

parameters:
- name: TeamName
  type: string
- name: ServiceShortName
  type: string
  default:
- name: ScriptPath
  type: string

steps:
- task: PowerShell@2
  displayName: 'ps: Create DateTime variable'
  name: create_bug_variables
  condition: failed()
  enabled: true
  inputs: 
    targetType: 'inline'
    pwsh: false
    script: |
      [string]$DateTime = $(Get-Date).ToString('yyyy-MM-dd HH:mm')

      $serviceShortName = '${{ parameters.ServiceShortName }}'
      
      If (![System.String]::IsNullOrWhiteSpace($serviceShortName)) {
        $ItemTitle = '${{ parameters.ServiceShortName }} - Pipeline $(System.DefinitionName) failed'
        Write-Host "##vso[task.setvariable variable=itemTitle;isOutput=true]$($ItemTitle + ' - ' + $DateTime)"
      }
      Else {
        $ItemTitle = 'Pipeline $(System.DefinitionName) failed'
        Write-Host "##vso[task.setvariable variable=itemTitle;isOutput=true]$($ItemTitle + ' - ' + $DateTime)"
        }
- task: PowerShell@2
  displayName: 'az ps: Create Bug Work Item'
  condition:  and(failed(), contains(variables['create_bug_variables.itemTitle'], '-'))
  enabled: true
  inputs:
    targetType: 'filepath'
    filePath: ${{ parameters.ScriptPath }}/Add-AzureDevopsBoardItem.ps1
    pwsh: false
    arguments: "-OrganizationName '$(OrganizationName)' -ProjectName '$(ProjectName)' -TeamName '${{ parameters.TeamName }}' -ItemTypeName '$(ItemTypeName)' -ItemWorkType '$(ItemWorkType)' -ItemTitle '$(create_bug_variables.itemTitle)' -ItemIteration 'Current' -ItemDescription 'Something failed for build <a href=$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=results> $(Build.BuildId) </a>'"
  env:
    SYSTEM_ACCESSTOKEN: $(system.accesstoken)
    SYSTEM_DEFINITIONNAME: $(System.DefinitionName)