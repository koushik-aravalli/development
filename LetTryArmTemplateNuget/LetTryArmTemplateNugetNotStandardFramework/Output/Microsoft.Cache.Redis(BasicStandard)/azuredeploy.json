{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "redisCacheName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Redis Cache to create."
      }
    },
    "metadata": {
      "type": "object",
      "metadata": {
        "description": "Metadata for this resource"
      }
    },    
    "sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier of the new Azure Redis Cache."
      }
    },
    "redisCacheFamily": {
      "type": "string",
      "defaultValue": "C",
      "allowedValues": [
        "C",
        "P"
      ],
      "metadata": {
        "description": "The family for the sku. C for Basic and Standard. P for Premium"
      }
    },
    "redisCacheCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The size of the new Azure Redis Cache instance. C0(250MB) 16db, C1(1GB) 16db, C2(2.5GB) 16db, C3(6GB) 16db, C4(13GB) 32db, C5(26GB) 48db, C6(53GB) 64db, --- P1(6-60GB) 16db, P2 (13-130GB) 32db, P3 (26-260GB) 48db, P4(53-530GB) 64db"
      }
    },
    "enableNonSslPort": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "A boolean value that indicates whether to allow access via non-SSL ports. (SSL port 6380, NonSSL port 6379)"
      }
    },
    "maxMemoryEvictionPolicy": {
      "type": "string",
      "allowedValues": [
        "volatile-lru",
        "allkeys-lru",
        "volatile-random",
        "allkeys-random",
        "volatile-ttl",
        "noeviction"
      ],
      "defaultValue": "volatile-lru",
      "metadata": {
        "description": "The behavior Redis follows when the maxmemory limit is reached (Can be set from Basic and higher). https://redis.io/topics/lru-cache#eviction-policies"
      }
    },
    "maxMemoryReserved": {
      "type": "string",
      "defaultValue": "2",
      "allowedValues": [
        "0",
        "2",
        "50",
        "100",
        "150"
      ],
      "metadata": {
        "description": "(Can be set from Standard and higher). "
      }
    },
    "keyspaceNotifications": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Allow clients to receive notifications when certain events occur. (Can be set from Standard and higher). https://redis.io/topics/notifications"
      }
    },
    "diagnostics": {
      "type": "string",
      "defaultValue": "disabled",
      "allowedValues": [
        "enabled",
        "disabled"
      ],
      "metadata": {
        "description": "The flag allowing to enable or disable provisioning of the jumpbox VM that can be used to access the nodes"
      }
    },
    "existingDiagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Only needed when Storage is enabled. Name of an existing storage account for diagnostics. Must be in the same region as the Redis Cache."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/pascalnaber/EnterpriseARMTemplates/master/Resources/Microsoft.Cache.Redis(BasicStandard)/nested/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the Visual Studio PowerShell scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The SAS token to access the storage account"
      }
    }
  },
  "variables": {
    "redisCacheName": "[parameters('redisCacheName')]",
    "diagnosticsTemplate": "[concat(parameters('_artifactsLocation'), 'redis-diagnostics-',parameters('diagnostics'),'.json', parameters('_artifactsLocationSasToken'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('redisCacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "tags": {
        "department": "[parameters('metadata').department]",
        "projectName": "[parameters('metadata').projectName]",
        "owner": "[parameters('metadata').owner]",
        "environment": "[parameters('metadata').environment]"
      },
      "properties": {
        "enableNonSslPort": "[parameters('enableNonSslPort')]",
        "sku": {
          "name": "[parameters('sku')]",
          "family": "[parameters('redisCacheFamily')]",
          "capacity": "[parameters('redisCacheCapacity')]"
        },
        "redisConfiguration": {
          "maxmemory-reserved": "[parameters('maxMemoryReserved')]",
          "maxmemory-delta": "[parameters('maxMemoryReserved')]",
          "maxmemory-policy": "[parameters('maxMemoryEvictionPolicy')]",
          "notify-keyspace-events": "[parameters('keyspaceNotifications')]"
        }
      }
    },
    {
      "name": "diagnostics",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Cache/Redis/', variables('redisCacheName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('diagnosticsTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "redisCacheName": {
            "value": "[variables('redisCacheName')]"
          },
          "existingDiagnosticsStorageAccountName": {
            "value": "[parameters('existingDiagnosticsStorageAccountName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "primaryConnectionString": {
      "type": "string",
      "value": "[concat(variables('redisCacheName'),'.redis.cache.windows.net:6380,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2015-08-01').primaryKey)]"
    }    
  }
}